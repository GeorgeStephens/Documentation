name: "[beta] Build and publish API docs"

on:
  # Current: Only allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
  # Future: Set up to run on pushes or PRs targeting the default branch.
  # push:
  #   branches: [ "blob" ]
  # pull_request:
  #   branches: [ "develop" ]

jobs:
  # Build job
  build:
    # There is a project that requires Windows, but has been excluded because the AWS deployment part requires Ubuntu.
    # The Meadow.Foundation.Peripherals/Displays.WinForms project requires Windows `dotnet` to build successfully via DocFX.
    #runs-on: windows-latest
    runs-on: ubuntu-latest
    
    steps:
      # Check out this content repo.
      - name: Checkout beta Documentation side-by-side
        uses: actions/checkout@v3
        with:
          path: src
          ref: develop # <-- required to deploy beta docs
          
      # Clone all the Meadow dependencies adjacent for DocFX build use.
      - name: Checkout Meadow.Units side-by-side
        uses: actions/checkout@v3
        with:
          repository: WildernessLabs/Meadow.Units
          path: Meadow.Units
          ref: develop
          
      - name: Checkout Meadow.Logging side-by-side
        uses: actions/checkout@v3
        with:
          repository: WildernessLabs/Meadow.Logging
          path: Meadow.Logging
          ref: develop
          
      - name: Checkout Meadow.Contracts side-by-side
        uses: actions/checkout@v3
        with:
          repository: WildernessLabs/Meadow.Contracts
          path: Meadow.Contracts
          ref: develop
          
      - name: Checkout Meadow.Modbus side-by-side
        uses: actions/checkout@v3
        with:
          repository: WildernessLabs/Meadow.Modbus
          path: Meadow.Modbus
          ref: develop
          
      - name: Checkout Meadow.Foundation side-by-side
        uses: actions/checkout@v3
        with:
          repository: WildernessLabs/Meadow.Foundation
          path: Meadow.Foundation
          ref: develop
          
      - name: Checkout Meadow.Core side-by-side
        uses: actions/checkout@v3
        with:
          repository: WildernessLabs/Meadow.Core
          path: Meadow.Core
          ref: develop

      - name: Checkout MQTTnet side-by-side
        uses: actions/checkout@v3
        with:
          repository: WildernessLabs/MQTTnet
          path: MQTTnet
          ref: develop
          
      - name: Checkout Meadow side-by-side
        uses: actions/checkout@v3
        with:
          # Private repo requires token access; rest are public repos.
          token: ${{ secrets.CI_ACCESS_TOKEN }}
          repository: WildernessLabs/Meadow
          path: Meadow
          ref: main # No develop branch on Meadow [yet]
          
      # Clone more Meadow-related repos for API docs generation (via DocFX).
      - name: Checkout Meadow.Foundation.Grove into DocFX-expected Source location
        uses: actions/checkout@v3
        with:
          repository: WildernessLabs/Meadow.Foundation.Grove
          path: Meadow.Foundation.Grove
          ref: develop
          
      - name: Checkout Meadow.Foundation.FeatherWings into DocFX-expected Source location
        uses: actions/checkout@v3
        with:
          repository: WildernessLabs/Meadow.Foundation.FeatherWings
          path: Meadow.Foundation.FeatherWings
          ref: develop
          
      - name: Checkout Meadow.Foundation.mikroBUS into DocFX-expected Source location
        uses: actions/checkout@v3
        with:
          repository: WildernessLabs/Meadow.Foundation.mikroBUS
          path: Meadow.Foundation.mikroBUS
          ref: develop

      - name: Setup .NET Core SDK 6.0.x & 7.0.x
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: |
            7.0.x

      - name: Setup NuGet
        uses: Nuget/setup-nuget@v1.0.5

      - name: Install DocFX globally
        run: |
          dotnet tool install --global docfx

      - name: Run DocFX
        run: |
          cd src/docfx
          docfx docfx.json

      - name: Clean up some generated DocFX TOC output
        shell: pwsh
        run: |
          cd src/docfx
          (cat ./docs/api/Meadow/toc.html) | % { $_ -replace ">Meadow.Peripherals.", ">" } > ./docs/api/Meadow/toc.html
          (cat ./docs/api/Meadow.Foundation/toc.html) | % { $_ -replace ">Meadow.Foundation.", ">" } > ./docs/api/Meadow.Foundation/toc.html
          (cat ./docs/api/Meadow.Foundation/toc.html) | % { $_ -replace ">/a>", ">Meadow.Foundation</a>" } > ./docs/api/Meadow.Foundation/toc.html
          (cat ./docs/api/Meadow.Foundation.Grove/toc.html) | % { $_ -replace ">/a>", ">Meadow.Foundation.Grove</a>" } > ./docs/api/Meadow.Foundation.Grove/toc.html
          (cat ./docs/api/Meadow.Foundation.FeatherWings/toc.html) | % { $_ -replace ">/a>", ">Meadow.Foundation.FeatherWings</a>" } > ./docs/api/Meadow.Foundation.FeatherWings/toc.html
          (cat ./docs/api/Meadow.Foundation.mikroBUS/toc.html) | % { $_ -replace ">/a>", ">Meadow.Foundation.mikroBUS</a>" } > ./docs/api/Meadow.Foundation.mikroBUS/toc.html

      - if: ${{ (github.event_name == 'workflow_dispatch') }}
        # Manual trigger only since the changing content of the API docs might be entirely dictated by other code repos.
        # We may also want to manually trigger for structural/template docs changes in this repo, though.
        # Future option might be to trigger this API docs Action on updates to those code repos _and_ only on updates to relevant template files in this repo.
        name: Sync site to beta site on manual trigger
        uses: bacongobbler/azure-blob-storage-upload@main
        with:
          source_dir: 'src/docfx/docs'
          container_name: '$web/docs'
          connection_string: ${{ secrets.ConnectionString }}
          overwrite: 'true'
        # This requires more research and testing. We want a way to ensure files that are not part of this deployment get removed from the site (e.g., files that were moved or deleted).
        # This `with...args` is not well documented in the Action for when you deploy to a sub-folder, nor on AWS S3 docs (https://docs.aws.amazon.com/cli/latest/reference/s3/sync.html).
        # It may be too aggressive when we are now deploying regular docs and API docs separately.
        # with:
        #   args: --delete
